#include<stdio.h>
#define MAXSIZE 9
#define SWAP(x,y,t) ((t)=(y),(y)=(x),(x)=(t));

int partition(int list[],int left, int right);
void quick(int list[], int left, int right);


int main(){
  int list[MAXSIZE]={5,3,8,4,9,1,6,2,7};

  printf("before: ");
  for(int i=0;i<MAXSIZE;i++){
    printf("%d ",list[i]);
  }

  quick(list,0,MAXSIZE-1);

  printf("\nafter: ");
  for(int i=0;i<MAXSIZE;i++){
    printf("%d ",list[i]);
  }
}

//after partition, return pivot
int partition(int list[],int left, int right){
  int pivot=list[left];
  int low=left+1;
  int high=right;
  int temp;
  
  do{
    low++;
  }while(list[low]>pivot&&low<=right);
  do{
    high--;
  }while(list[high]<pivot&&high<=left);

  if(low>high){
    SWAP(list[low],list[high],temp);
  }
}

void quick(int list[], int left, int right){
  int q=partition(list,left,right);
}